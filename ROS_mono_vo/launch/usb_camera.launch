<launch>

  <arg name="cam_id" default="0"/>
  <arg name="viewer" default="false" />

  <arg name="manager" /> <!-- Must be globally qualified -->
  <arg name="respawn" default="false" />

  <arg     if="$(arg respawn)" name="bond" value="" />
  <arg unless="$(arg respawn)" name="bond" value="--no-bond" />

 <node pkg="tf" type="static_transform_publisher" name="world_to_cam"
     args="0 0 0 0 0 0 world usb_cam 100" />
   <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
     <param name="video_device" value="/dev/video0" />
     <param name="image_width" value="640" />
     <param name="image_height" value="480" />
     <param name="pixel_format" value="yuyv" />
     <param name="camera_frame_id" value="usb_cam" />
     <param name="io_method" value="mmap"/>
   </node>
   <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
     <remap from="image" to="/usb_cam/image_raw"/>
     <param name="autosize" value="true" />
   </node>

  <group if="$(arg viewer)">
    <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
      <remap from="image" to="/usb_cam/image_raw"/>
      <param name="autosize" value="true" />
    </node>
  </group>

  <!-- Load image_proc node: -->
    <group ns="usb_cam">
      <node name="image_proc" pkg="image_proc" type="image_proc"/>
    </group>


</launch>
